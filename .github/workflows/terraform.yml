name: 'Terraform'

on:
  push:
    branches:
      - "master"

env:
  AZURE_FUNCTIONAPP_NAME: secondary-func-app-234
  AZURE_FUNCTIONAPP_PACKAGE_PATH: './api'
  NODE_VERSION: '16.x'

# on:
#   workflow_dispatch

jobs:
  terraform:
    name: 'Terraform'
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_AD_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
    runs-on: ubuntu-latest
    environment: production

    defaults:
      run:
        shell: bash

    steps:

    - name: Checkout
      uses: actions/checkout@v2

    - name: 'Terraform Init'
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: 1.3.0
        tf_actions_subcommand: 'init'
        tf_actions_working_dir: "./terraform"

    - name: 'Terraform Validate'
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: 1.3.0
        tf_actions_subcommand: 'validate'
        tf_actions_working_dir: "./terraform"

    - name: 'Terraform Plan'
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: 1.3.0
        tf_actions_subcommand: 'plan'
        tf_actions_working_dir: "./terraform"

    - name: Terraform Apply
      env:
        TF_VAR_PREFIX: ${{ secrets.TF_VAR_PREFIX }}
        TF_VAR_ENVIRONMENT: ${{ secrets.TF_VAR_ENVIRONMENT }}
        TF_VAR_LOCATION: ${{ secrets.TF_VAR_LOCATION }}
        TF_VAR_PSQL_ADMIN_LOGIN: ${{ secrets.TF_VAR_PSQL_ADMIN_LOGIN }}
        TF_VAR_PSQL_ADMIN_PASSWORD: ${{ secrets.TF_VAR_PSQL_ADMIN_PASSWORD }}
      run: |
        TF_STRICT_MODE=false \
        terraform apply -auto-approve \
        -var="prefix=${{ secrets.TF_VAR_PREFIX }}" \
        -var="environment=${{ secrets.TF_VAR_ENVIRONMENT }}" \
        -var="location=${{ secrets.TF_VAR_LOCATION }}" \
        -var="psql_admin_login=${{ secrets.TF_VAR_PSQL_ADMIN_LOGIN }}" \
        -var="psql_admin_password=${{ secrets.TF_VAR_PSQL_ADMIN_PASSWORD }}" -input=false

    - name:  Create CSV file
      run: mkdir data && touch data/users.csv

    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v3.1.0
      with:
        # Artifact name
        name: "Create terraform tfstate artifact"
        # A file, directory or wildcard pattern that describes what to upload
        path: "./data"

    - name: Copy files
      uses: ulaval/azure-blob-copy-action@v1
      with:
        action: upload
        connection_string: ${{ secrets.CONNECTION_STRING }}
        container_name: files
        local_directory: ./data
        http_headers: |
          - glob: "**/*.????????.*"
            headers:
              Cache-Control: public, max-age=604800, immutable

          - glob: "**/*"
            headers:
              Cache-Control: public, max-age=120, s-maxage=180, proxy-revalidate

    - name: Setup Node ${{ env.NODE_VERSION }} Environment
      uses: actions/setup-node@v2
      with:
        node-version: ${{ env.NODE_VERSION }}

    - name: 'Resolve Project Dependencies Using Npm'
      shell: bash
      run: |
        pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
        npm install
        npm run build --if-present
        npm run test --if-present
        popd

    - name: 'Run Azure Functions action'
      uses: Azure/functions-action@v1
      with:
        app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
        package: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}
        publish-profile: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE }}